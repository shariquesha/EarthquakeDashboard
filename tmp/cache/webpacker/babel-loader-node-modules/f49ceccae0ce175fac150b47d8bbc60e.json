{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport 'whatwg-fetch';\nexport function Get(_x) {\n  return _Get.apply(this, arguments);\n}\n\nfunction _Get() {\n  _Get = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(params) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            response = fetch('http://localhost:3000/api/earthquakes');\n            console.log(response.json());\n            return _context.abrupt(\"return\", response);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _Get.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/md.shahab/env/earthquake-dashboard/app/javascript/src/services/index.js"],"names":["Get","params","response","fetch","console","log","json"],"mappings":";;;;;;AAAA,OAAO,cAAP;AAEA,gBAAsBA,GAAtB;AAAA;AAAA;;;;;2BAAO,iBAAmBC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,QADD,GACYC,KAAK,CAAC,uCAAD,CADjB;AAELC,YAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,EAAZ;AAFK,6CAGEJ,QAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import 'whatwg-fetch'\n\nexport async function Get(params) {\n  const response = fetch('http://localhost:3000/api/earthquakes');\n  console.log(response.json());\n  return response;\n}\n\n"]},"metadata":{},"sourceType":"module"}