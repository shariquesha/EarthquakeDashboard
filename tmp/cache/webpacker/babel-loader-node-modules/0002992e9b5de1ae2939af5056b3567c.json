{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar request = require('request');\n\nvar options = {\n  url: '/api/earthquake/index',\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n  }\n};\nexport function Get(_x) {\n  return _Get.apply(this, arguments);\n}\n\nfunction _Get() {\n  _Get = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(params) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return request.get(options, params);\n\n          case 2:\n            response = _context.sent;\n            console.log(response);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _Get.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/md.shahab/env/earthquake-dashboard/app/javascript/src/services/index.js"],"names":["request","require","options","url","headers","Accept","Get","params","get","response","console","log"],"mappings":";;;;;;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,GAAG,EAAE,uBADS;AAEbC,EAAAA,OAAO,EAAE;AACN,oBAAgB,kBADV;AAENC,IAAAA,MAAM,EAAE;AAFF;AAFI,CAAhB;AAQA,gBAAsBC,GAAtB;AAAA;AAAA;;;;;2BAAO,iBAAmBC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACkBP,OAAO,CAACQ,GAAR,CAAYN,OAAZ,EAAoBK,MAApB,CADlB;;AAAA;AACCE,YAAAA,QADD;AAELC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["const request = require('request');\n\nconst options = {\n  url: '/api/earthquake/index',\n   headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n};\n\nexport async function Get(params) {\n  const response = await request.get(options,params)\n  console.log(response);\n}"]},"metadata":{},"sourceType":"module"}