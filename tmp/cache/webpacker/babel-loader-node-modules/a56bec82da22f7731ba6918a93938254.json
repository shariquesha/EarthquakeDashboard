{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { Get } from '../services';\nexport function updateDashboard(_x, _x2) {\n  return _updateDashboard.apply(this, arguments);\n}\n\nfunction _updateDashboard() {\n  _updateDashboard = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(dispatch, page) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Get('index', {\n              page: page\n            });\n\n          case 2:\n            response = _context.sent;\n            dispatch({\n              type: 'updateDashboard',\n              payload: response.data\n            });\n            console.log(response);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _updateDashboard.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/md.shahab/env/earthquake-dashboard/app/javascript/src/actions/index.js"],"names":["Get","updateDashboard","dispatch","page","response","type","payload","data","console","log"],"mappings":";;;;;;AAAA,SAASA,GAAT,QAAoB,aAApB;AAEA,gBAAsBC,eAAtB;AAAA;AAAA;;;;;2BAAO,iBAA+BC,QAA/B,EAAyCC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACkBH,GAAG,CAAC,OAAD,EAAS;AAAEG,cAAAA,IAAI,EAAEA;AAAR,aAAT,CADrB;;AAAA;AACCC,YAAAA,QADD;AAELF,YAAAA,QAAQ,CAAC;AAACG,cAAAA,IAAI,EAAE,iBAAP;AAA0BC,cAAAA,OAAO,EAAEF,QAAQ,CAACG;AAA5C,aAAD,CAAR;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { Get } from '../services'\n\nexport async function updateDashboard(dispatch, page) {\n  const response = await Get('index',{ page: page });\n  dispatch({type: 'updateDashboard', payload: response.data });\n  console.log(response);\n}"]},"metadata":{},"sourceType":"module"}