{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport 'whatwg-fetch';\nexport function Get(_x) {\n  return _Get.apply(this, arguments);\n}\n\nfunction _Get() {\n  _Get = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(params) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fetch('http://localhost:3000/api/earthquakes').then(function (data) {\n              return data;\n            }).catch(function (err) {\n              console.warn(err);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _Get.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/md.shahab/env/earthquake-dashboard/app/javascript/src/services/index.js"],"names":["Get","params","fetch","then","data","catch","err","console","warn"],"mappings":";;;;;;AAAA,OAAO,cAAP;AAEA,gBAAsBA,GAAtB;AAAA;AAAA;;;;;2BAAO,iBAAmBC,MAAnB;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,KAAK,CAAC,uCAAD,CAAL,CAA+CC,IAA/C,CAAoD,UAAAC,IAAI,EAAI;AAC1D,qBAAOA,IAAP;AACD,aAFD,EAEGC,KAFH,CAES,UAAAC,GAAG,EAAI;AACdC,cAAAA,OAAO,CAACC,IAAR,CAAaF,GAAb;AACD,aAJD;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import 'whatwg-fetch'\n\nexport async function Get(params) {\n  fetch('http://localhost:3000/api/earthquakes').then(data => {\n    return data;\n  }).catch(err => {\n    console.warn(err)\n  });\n}\n\n"]},"metadata":{},"sourceType":"module"}