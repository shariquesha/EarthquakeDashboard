{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/md.shahab/env/earthquake-dashboard/app/javascript/src/containers/dashboard.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from 'reactstrap';\nimport { DashboardTable } from '../components/Table';\nimport { updateDashboard } from '../actions';\nexport var Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.handleClick =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return updateDashboard(_this.props.dispatch, Number(_this.props.page) + 1);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return updateDashboard(this.props.dispatch, 1);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex flex-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, this.props.data && React.createElement(DashboardTable, {\n        data: this.props.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(Button, {\n        outline: true,\n        color: \"primary\",\n        className: \"justify-content-center\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"load more\")));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var data = state.earth_quakes || '';\n  var page = state.page || '';\n  return {\n    data: data,\n    page: page\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/Users/md.shahab/env/earthquake-dashboard/app/javascript/src/containers/dashboard.js"],"names":["React","PropTypes","connect","Button","DashboardTable","updateDashboard","Dashboard","handleClick","props","dispatch","Number","page","data","Component","mapStateToProps","state","earth_quakes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,YAAvB;AAEA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,WAAaC,SAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UAMEC,WANF;AAAA;AAAA;AAAA;AAAA,6BAMgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACNF,eAAe,CAAC,MAAKG,KAAL,CAAWC,QAAZ,EAAsBC,MAAM,CAAC,MAAKF,KAAL,CAAWG,IAAZ,CAAN,GAA0B,CAAhD,CADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANhB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGUN,eAAe,CAAC,KAAKG,KAAL,CAAWC,QAAZ,EAAqB,CAArB,CAHzB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BAUW;AACP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKD,KAAL,CAAWI,IAAX,IAAmB,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADrB,EAEA,oBAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,KAAK,EAAC,SAAtB;AAAgC,QAAA,SAAS,EAAC,wBAA1C;AAAmE,QAAA,OAAO,EAAE,KAAKL,WAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFA,CADF,CADF;AAQD;AAnBH;;AAAA;AAAA,EAA+BP,KAAK,CAACa,SAArC;;AAsBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,MAAMH,IAAI,GAAGG,KAAK,CAACC,YAAN,IAAsB,EAAnC;AACA,MAAML,IAAI,GAAGI,KAAK,CAACJ,IAAN,IAAc,EAA3B;AACA,SAAO;AAAEC,IAAAA,IAAI,EAAEA,IAAR;AAAcD,IAAAA,IAAI,EAAEA;AAApB,GAAP;AACD,CAJD;;AAKA,eAAeT,OAAO,CAACY,eAAD,CAAP,CAAyBR,SAAzB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { Button } from 'reactstrap';\n\nimport { DashboardTable } from '../components/Table';\nimport { updateDashboard } from '../actions';\nexport class Dashboard extends React.Component {\n\n  async componentWillMount() {\n    await updateDashboard(this.props.dispatch,1)\n  }\n\n  handleClick = async () => {\n    await updateDashboard(this.props.dispatch, Number(this.props.page) + 1 )\n  }\n\n  render() {\n    return(\n      <React.Fragment>\n        <div className=\"d-flex flex-row\">\n        { this.props.data && <DashboardTable data={this.props.data} />}\n        <Button outline color=\"primary\" className=\"justify-content-center\" onClick={this.handleClick}>load more</Button>\n        </div>\n      </React.Fragment>\n    )\n  };\n}\n\nconst mapStateToProps = state => {\n  const data = state.earth_quakes || ''\n  const page = state.page || ''\n  return { data: data, page: page }\n};\nexport default connect(mapStateToProps)(Dashboard);"]},"metadata":{},"sourceType":"module"}